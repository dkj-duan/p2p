<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bdqn.mapper.EarningsMapper" >
  <resultMap id="BaseResultMap" type="cn.bdqn.domain.Earnings" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="bid_id" property="bidId" jdbcType="INTEGER" />
    <result column="earnings_time" property="earningsTime" jdbcType="TIMESTAMP" />
    <result column="earnings_money" property="earningsMoney"  />
    <result column="earnings_state" property="earningsState" jdbcType="INTEGER" />
  </resultMap>

    <resultMap id="joint" type="cn.bdqn.domain.Earnings" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="product_id" property="productId" jdbcType="INTEGER" />
        <result column="bid_id" property="bidId" jdbcType="INTEGER" />
        <result column="earnings_time" property="earningsTime" jdbcType="TIMESTAMP" />
        <result column="earnings_money" property="earningsMoney"  />
        <result column="earnings_state" property="earningsState" jdbcType="INTEGER" />
        <association property="user" javaType="cn.bdqn.domain.User">
            <id column="userId" property="userId" jdbcType="INTEGER" />
            <result column="user_Phone" property="userPhone" jdbcType="VARCHAR" />
            <result column="user_Pwd" property="userPwd" jdbcType="VARCHAR" />
            <result column="user_Name" property="userName" jdbcType="VARCHAR" />
            <result column="user_Card" property="userCard" jdbcType="VARCHAR" />
            <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP" />
            <result column="user_login_time" property="userLoginTime" jdbcType="TIMESTAMP" />
            <result column="user_img" property="userImg" jdbcType="VARCHAR" />
        </association>
    </resultMap>
  <sql id="Base_Column_List" >
    id, user_Id, product_id, bid_id, earnings_time, earnings_money, earnings_state
  </sql>

    <sql id="lianJie">
        e.id, e.user_Id, e.product_id, e.bid_id, e.earnings_time, e.earnings_money, e.earnings_state,
        u.user_Id as uUser, u.user_Phone, u.user_Pwd, u.user_Name, u.user_Card, u.user_register_time, u.user_login_time,
        u.user_img
    </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="lianJie" />
    from t_earnings as e,t_user as u
    where id = #{id,jdbcType=INTEGER}
  </select>

<!--    查询全部-->
    <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="lianJie" />
        from t_earnings as e,t_user as u
    </select>

<!--    根据userId查询-->
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="lianJie" />
        from t_earnings as e,t_user as u
        where e.user_Id = #{userId,jdbcType=INTEGER}
    </select>

<!--    根据产品id查询-->
    <select id="selectByProductId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="lianJie" />
        from t_earnings as e,t_user as u
        where e.product_id = #{productId,jdbcType=INTEGER}
    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_earnings
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.bdqn.domain.Earnings" >
    insert into t_earnings (id, user_Id, product_id,
      bid_id, earnings_time, earnings_money,
      earnings_state)
    values (#{id,jdbcType=INTEGER}, #{user.userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER},
      #{bidId,jdbcType=INTEGER}, #{earningsTime,jdbcType=TIMESTAMP}, #{earningsMoney},
      #{earningsState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bdqn.domain.Earnings" >
    insert into t_earnings
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user.userId != null" >
        user_Id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="bidId != null" >
        bid_id,
      </if>
      <if test="earningsTime != null" >
        earnings_time,
      </if>
      <if test="earningsMoney != null" >
        earnings_money,
      </if>
      <if test="earningsState != null" >
        earnings_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user.userId != null" >
        #{user.userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null" >
        #{bidId,jdbcType=INTEGER},
      </if>
      <if test="earningsTime != null" >
        #{earningsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="earningsMoney != null" >
        #{earningsMoney},
      </if>
      <if test="earningsState != null" >
        #{earningsState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.domain.Earnings" >
    update t_earnings
    <set >
      <if test="user.userId != null" >
        user_Id = #{user.userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null" >
        bid_id = #{bidId,jdbcType=INTEGER},
      </if>
      <if test="earningsTime != null" >
        earnings_time = #{earningsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="earningsMoney != null" >
        earnings_money = #{earningsMoney},
      </if>
      <if test="earningsState != null" >
        earnings_state = #{earningsState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.domain.Earnings" >
    update t_earnings
    set user_Id = #{user.userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      bid_id = #{bidId,jdbcType=INTEGER},
      earnings_time = #{earningsTime,jdbcType=TIMESTAMP},
      earnings_money = #{earningsMoney},
      earnings_state = #{earningsState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>