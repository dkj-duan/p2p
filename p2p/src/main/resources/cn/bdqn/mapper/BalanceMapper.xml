<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bdqn.mapper.BalanceMapper" >

  <resultMap id="BaseResultMap" type="cn.bdqn.domain.Balance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="money" property="money"  />
      <association property="user" javaType="cn.bdqn.domain.User">
          <id column="userId" property="userId" jdbcType="INTEGER" />
          <result column="user_Phone" property="userPhone" jdbcType="VARCHAR" />
          <result column="user_Pwd" property="userPwd" jdbcType="VARCHAR" />
          <result column="user_Name" property="userName" jdbcType="VARCHAR" />
          <result column="user_Card" property="userCard" jdbcType="VARCHAR" />
          <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP" />
          <result column="user_login_time" property="userLoginTime" jdbcType="TIMESTAMP" />
          <result column="user_img" property="userImg" jdbcType="VARCHAR" />
      </association>
  </resultMap>

      <sql id="Base_Column_List" >
        id, user_Id, money
      </sql>

    <sql id="joint">
        b.id, b.user_Id as userId, money,u.user_Id as uUser, u.user_Phone, u.user_Pwd, u.user_Name, u.user_Card, u.user_register_time, u.user_login_time,
        u.user_img
   </sql>

<!--    根据用户id查询余额-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="joint" />
    from t_balance as b,t_user as u
    where
      b.user_Id = u.user_Id and
      b.user_Id = #{userId,jdbcType=INTEGER}
  </select>


<!--    添加可用资金-->
  <insert id="insert" parameterType="cn.bdqn.domain.Balance" >
    insert into t_balance (id, user_Id, money
      )
    values (#{id,jdbcType=INTEGER}, #{user.userId,jdbcType=INTEGER}, #{money}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.bdqn.domain.Balance" >
    update t_balance
    set money = #{money}
    where user_Id = #{user.userId,jdbcType=INTEGER}
  </update>
<!--  <insert id="insertSelective" parameterType="cn.bdqn.domain.Balance" >-->
<!--    insert into t_balance-->
<!--    <trim prefix="(" suffix=")" suffixOverrides="," >-->
<!--      <if test="id != null" >-->
<!--        id,-->
<!--      </if>-->
<!--      <if test="userId != null" >-->
<!--        user_Id,-->
<!--      </if>-->
<!--      <if test="money != null" >-->
<!--        money,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides="," >-->
<!--      <if test="id != null" >-->
<!--        #{id,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="userId != null" >-->
<!--        #{userId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="money != null" >-->
<!--        #{money,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->

    <!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--    delete from t_balance-->
    <!--    where id = #{id,jdbcType=INTEGER}-->
    <!--  </delete>-->

  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.domain.Balance" >
    update t_balance
    <set >
      <if test="money != null" >
        money = #{money},
      </if>
    </set>
    where  user_Id = #{user.userId,jdbcType=INTEGER}
  </update>

</mapper>