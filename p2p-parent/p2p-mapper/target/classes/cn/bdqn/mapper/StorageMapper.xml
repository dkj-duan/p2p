<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bdqn.mapper.StorageMapper" >
  <resultMap id="BaseResultMap" type="cn.bdqn.domain.Storage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="storage_time" property="storageTime" jdbcType="TIMESTAMP" />
    <result column="annotation" property="annotation" jdbcType="VARCHAR" />
  </resultMap>

    <resultMap id="joint" type="cn.bdqn.domain.Storage">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="money" property="money"    />
        <result column="storage_time" property="storageTime" jdbcType="TIMESTAMP" />
        <result column="annotation" property="annotation" jdbcType="VARCHAR" />
        <association property="user" javaType="cn.bdqn.domain.User">
            <id column="userId" property="userId" jdbcType="INTEGER" />
            <result column="user_Phone" property="userPhone" jdbcType="VARCHAR" />
            <result column="user_Pwd" property="userPwd" jdbcType="VARCHAR" />
            <result column="user_Name" property="userName" jdbcType="VARCHAR" />
            <result column="user_Card" property="userCard" jdbcType="VARCHAR" />
            <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP" />
            <result column="user_login_time" property="userLoginTime" jdbcType="TIMESTAMP" />
            <result column="user_img" property="userImg" jdbcType="VARCHAR" />
        </association>
    </resultMap>
  <sql id="Base_Column_List" >
    id, user_Id, order_number, state, money, storage_time, annotation
  </sql>
    <sql id="lianJie">
        st.id, st.user_Id as userId, st.order_number, st.state, st.money, st.storage_time, st.annotation,
        u.user_Id as uUser, u.user_Phone, u.user_Pwd, u.user_Name, u.user_Card, u.user_register_time, u.user_login_time,
        u.user_img
    </sql>
<!--根据id查询用户-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_storage
    where st.user_Id = u.user_Id and id = #{id,jdbcType=INTEGER}
  </select>
<!--根据用户id查询-->
    <select id="selectByUserId" resultMap="joint">
        select
        <include refid="lianJie"/>
        from t_storage as st,t_user as u
        where
        st.user_Id = u.user_Id and
        st.user_Id = #{userId,jdbcType=INTEGER}

    </select>

<!--    根据订单编号查询充值信息-->
    <select id="selectByOrderNumber" resultMap="joint">
        select
        <include refid="lianJie"/>
        from t_storage as st,t_user as u
        where
        st.user_Id = u.user_Id and
        st.order_number = #{orderNumber,jdbcType=INTEGER}


    </select>


<!--    添加-->
  <insert id="insert" parameterType="cn.bdqn.domain.Storage" >
    insert into t_storage (user_Id, order_number,
      state, money, storage_time,annotation)
    values (#{user.userId}, #{orderNumber},
      #{state}, #{money}, #{storageTime},
      #{annotation})
  </insert>



  <insert id="insertSelective" parameterType="cn.bdqn.domain.Storage" >
    insert into t_storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user.userId != null" >
        user_Id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="storageTime != null" >
        storage_time,
      </if>
      <if test="explain != null" >
        explain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user.userId != null" >
        #{user.userId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money   },
      </if>
      <if test="storageTime != null" >
        #{storageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="explain != null" >
        #{explain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>



    <!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--    delete from t_storage-->
    <!--    where id = #{id,jdbcType=INTEGER}-->
    <!--  </delete>-->

<!--  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.domain.Storage" >-->
<!--    update t_storage-->
<!--    <set >-->
<!--      <if test="userId != null" >-->
<!--        user_Id = #{userId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="orderNumber != null" >-->
<!--        order_number = #{orderNumber,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="state != null" >-->
<!--        state = #{state,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="money != null" >-->
<!--        money = #{money,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--      <if test="storageTime != null" >-->
<!--        storage_time = #{storageTime,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="explain != null" >-->
<!--        explain = #{explain,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--    </set>-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </update>-->



<!--  <update id="updateByPrimaryKey" parameterType="cn.bdqn.domain.Storage" >-->
<!--    update t_storage-->
<!--    set user_Id = #{userId,jdbcType=INTEGER},-->
<!--      order_number = #{orderNumber,jdbcType=VARCHAR},-->
<!--      state = #{state,jdbcType=VARCHAR},-->
<!--      money = #{money,jdbcType=DOUBLE},-->
<!--      storage_time = #{storageTime,jdbcType=TIMESTAMP},-->
<!--      explain = #{explain,jdbcType=VARCHAR}-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </update>-->
</mapper>